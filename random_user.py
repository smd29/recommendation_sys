# -*- coding: utf-8 -*-
"""Random_user.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UDcvnUJ9HlFbuSU50mGt-Ta4Wg-PywwD
"""

import pandas as pd
import numpy as np
import random
import csv

from google.colab import files
uploaded=files.upload()

f = open('housing.csv')
csv_f = csv.reader(f)


price=[]
location=[]
type=[]
size=[]
desc_tennants=[]

for column in csv_f:
  price.append(column[1])
  type.append(column[2])
  desc_tennants.append(column[3])
  size.append(column[4])
  location.append(column[5])

price.remove('Description_Rent')
location.remove('Location')
type.remove('Description_Furnishing')
size.remove('Flat type(BHK)')
desc_tennants.remove('Description_Tenants')

print(price)
print(location)
print(type)
print(size)
print(desc_tennants)

for i in range(0,30):
  price[i]=price[i].replace(',', "")

price

available_choice=[]
for i in range(0,30):
  available_choice.append([price[i],location[i],type[i],size[i], desc_tennants[i]])

print(available_choice)

ratings=[np.random.randint(1,5),np.random.randint(1,5),np.random.randint(1,5),np.random.randint(1,5)]
print(ratings)

user_choices=[]

type=['Furnished','Semi-Furnished','Unfurnished']

#specifying the locations where available
location = ['Amanora Park Town','Magarpatta City','Hadapsar','Mundhwa']

#specifying the size of
size=['1BHK','2BHK','3BHK']

user_choices=[np.random.randint(7000,150000),random.choice(location),random.choice(type),random.choice(size)]

user_choices

most_imp=max(ratings)
print(most_imp)
idx=ratings.index(most_imp)
print(idx)

recommended=[]
print(user_choices)



while most_imp>3:
  
  temp=recommended
 
  
  if(len(temp)==0):
    
    if(idx==0):
      for i in range(0,30):
        recommend=available_choice[i]
        
        if(pd.to_numeric(user_choices[idx])>pd.to_numeric(recommend[idx])):
          temp.append(recommend)
    else: 
      for i in range(0,30):
        recommend=available_choice[i]
        if(user_choices[idx]==recommend[idx]):
          temp.append(recommend)
       
        

        
  else:
    
    
    if(idx==0):
      for j in range(0,len(recommended)):
        recommend=recommended[j]
        if(pd.to_numeric(user_choices[idx])<pd.to_numeric(recommend[idx])):
          temp.remove(recommend)      
    else:
      for j in range(0,len(temp)):
        recommend=recommended[j]
        if(user_choices[idx]!=recommend[idx]):
          temp.remove(recommend)
          
  recommended=temp        
  ratings[idx]=0
  most_imp=max(ratings)
  idx=ratings.index(most_imp)

temp

recommended